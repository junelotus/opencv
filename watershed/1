void watershed( InputArray image, InputOutputArray markers ); 
函数有两个参数，再输入图像到函数之前，必须在图像makers中使用正的索引粗略标出希望的大致要分割的区域。所以每一个区域都被表示为一个或者多个具有像素值１或者　２或者　３这样的的连通组建。像这样的marker可以使用findContours()和drawContours()从二值的mask中提却出来。这些marker是未来图像区域的种子，标记中的所有其他像素，如果和轮廓的关系未知，应该由算法定义，则应该设置为0。

总结：在分数岭算法使用之前，要首先对第二个参数进行处理，此参数应该包含不同区域的轮廓，每个轮廓有一个自己唯一的标号。轮廓的定位可以通过opencv中的findcontours方法实现，这些是在直行分水岭函数之前的要求。

接下来直行分水岭算法会发生：算法根据markers传入的发轮廓作为种子，对图像上的其他像素点根据分数岭算法规则进行判断，并对每个像素点的区域归属进行划定，直到处理完图像上的所有像素点。而区域和区域之间的分解处的值北定义为－１，以作划分。
